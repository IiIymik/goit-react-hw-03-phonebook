{"version":3,"sources":["utils/nanoid.js","components/Form/Form.styled.js","components/Form/Form.jsx","components/App/App.styled.js","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/App/App.jsx","index.js"],"names":["nanoid","customAlphabet","FormEl","Input","TitleInput","Button","Form","state","name","number","handleSubmit","e","preventDefault","data","props","obj","id","compare","checkContact","alert","reset","onSubmit","contacts","normalizedName","toLowerCase","find","contact","includes","setState","handleChange","currentTarget","value","this","type","pattern","onChange","title","required","Component","Container","TitleMain","TitleBook","List","Item","ButtonDel","ContactsList","onDeleteContact","map","onClick","Label","Filter","App","filter","deleteContact","contactId","prevState","findContacts","getVisibleContacts","normalizedFilter","formSubmit","localStorage","getItem","parseContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd62c767.chunk.js","sourcesContent":["import { customAlphabet } from 'nanoid'\r\nconst nanoid = customAlphabet('1234567890', 3);\r\nexport default nanoid;","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const FormEl = styled.form`\r\ndisplay: flex;\r\nalign-items: center;\r\n`;\r\n\r\nexport const Input = styled.input`\r\nmargin-left:5px;\r\nmargin-right:5px;\r\nline-height:10px;\r\nfont-size: 16px;\r\n&:focus{\r\n    outline: none;\r\n    border-color: blue;\r\n}\r\n`;\r\n\r\nexport const TitleInput = styled.h2``;\r\n\r\nexport const Button = styled.button`\r\nmargin-left:5px;\r\nbackground-color: white;\r\ncolor: green;\r\noutline:none;\r\nborder: 1px dashed green;\r\npadding: 3px;\r\n&:hover,:focus{\r\n    background-color: blue;\r\n    border: 1px dashed blue;\r\n    color: white;\r\n}\r\n`;\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport nanoid from '../../utils/nanoid.js';\nimport { FormEl, Input, TitleInput, Button, } from './Form.styled.js';\n\nexport default class Form extends Component {\n   static propTypes = {\n     name: PropTypes.string,\n     number: PropTypes.string,\n    }\n    state = {\n    name: '',\n    number: ''\n    }\n\n      handleSubmit = (e) => {\n        e.preventDefault()\n        const { name, number } = this.state;\n        const { data } = this.props;\n        const obj = {\n            id: nanoid(),\n                    name,\n                    number,\n        };\n        const compare = this.checkContact(data, obj)\n        if (compare) {\n          alert(`${compare.name} is already in contacts`)\n          return this.reset();\n        }\n          this.props.onSubmit(obj);\n          this.reset();\n  }\n\n  checkContact = (contacts, obj) => {\n    const { name } = obj;\n    const normalizedName = name.toLowerCase();\n     return contacts.find(contact => contact.name.toLowerCase().includes(normalizedName))\n    }\n\n    reset = () => {\n        this.setState( {\n    name: '',\n    number: ''\n    })\n    }\n\n      handleChange = (e) => {\n            const { name, value } = e.currentTarget;\n            this.setState({[name]: value,})\n    }\n\n    render() {\n        const { name, number } = this.state;\n        return (\n             <FormEl onSubmit={this.handleSubmit}>\n             <TitleInput>Name</TitleInput>\n            <Input\n             type=\"text\"\n             name=\"name\"\n             value={name}\n             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n             onChange={this.handleChange}\n             title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n             required\n           />\n           <TitleInput>Number</TitleInput>\n           <Input\n             type=\"tel\"\n             name=\"number\"\n             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n             onChange={this.handleChange}\n             value={number}\n             title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n             required\n           />\n            <Button type=\"submit\">Add contact</Button>\n         </FormEl>\n        )\n    }\n}\n","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Container = styled.div`\r\ndisplay:flex;\r\nflex-direction: column;\r\nalign-items:center;\r\n`;\r\n\r\nexport const TitleMain = styled.h1`\r\nmargin-bottom:15px;`;\r\n\r\nexport const TitleBook = styled.h2`\r\nmargin-top:10px;\r\nmargin-bottom:10px;\r\n`;\r\n\r\n","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const List = styled.ol`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: flex-start;\r\nmargin-top:10px;\r\n`;\r\n\r\nexport const Item = styled.li`\r\nfont-weight: 500;\r\nfont-size:20px;\r\nline-height:12px;\r\npadding: 10px;\r\nborder: 1px solid green;\r\n&:not(:last-child){\r\n    margin-bottom:5px;\r\n}\r\n`;\r\n\r\nexport const ButtonDel = styled.button`\r\nmargin-left:5px;\r\nbackground-color: white;\r\ncolor: red;\r\noutline:none;\r\nborder: 1px dashed red;\r\n&:hover,:focus{\r\n    background-color: blue;\r\n    border: 1px dashed blue;\r\n    color: white;\r\n}\r\n`;","import React from 'react';\r\nimport { List, Item, ButtonDel} from './ContactsList.styled.js'\r\n\r\nconst ContactsList = ({contacts, onDeleteContact}) => {\r\n    // console.log(contacts)\r\n    return (\r\n        <List>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <Item key={id} >{name}: {number}\r\n                <ButtonDel type=\"button\" onClick={()=>onDeleteContact(id)}>Delete</ButtonDel>\r\n                </Item>\r\n            ))}\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default ContactsList\r\n","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Input = styled.input`\r\nline-height:10px;\r\nfont-size: 16px;\r\n&:focus{\r\n    outline: none;\r\n    border-color: blue;\r\n}\r\n`;\r\n\r\nexport const Label = styled.label`\r\nfont-weight: 500;\r\nfont-size: 18px;\r\nline-height: 12px;\r\ndisplay: flex;\r\nalign-items: center;\r\n`;","import React from 'react';\r\nimport { Input, Label } from './Filter.styled.js';\r\n\r\nconst Filter=({value, onChange})=> {    \r\n    return (\r\n        <Label>\r\n            Find Your Contact =>\r\n              <Input type=\"text\" value={value} onChange={onChange} />\r\n      </Label>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Form from '../Form/Form';\nimport {Container, TitleMain, TitleBook,} from './App.styled.js'\nimport ContactsList from '../ContactsList/ContactsList';\nimport Filter from '../Filter/Filter';\n\n\nexport class App extends Component {\n  static propTypes = {\n    contacts: PropTypes.array,\n    filter:PropTypes.string,\n    }\n  state = {\n  contacts: [],\n  filter: '',\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts')\n    const parseContacts = JSON.parse(contacts);\n    if (parseContacts) {\n      this.setState({ contacts: parseContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  deleteContact = contactId => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== contactId),\n    }))\n  }\n\n  findContacts = (e) => {\n    const { value } = e.currentTarget\n    this.setState({filter: value,})\n  }\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>contact.name.toLowerCase().includes(normalizedFilter))\n  }\n\n  formSubmit = (data) => {\n   this.setState({ contacts: [...this.state.contacts, data] });\n  }\n\n  render() {\n    const {filter, contacts } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <Container>\n        <TitleMain>Phonebook</TitleMain>\n        <Form onSubmit={this.formSubmit} data={contacts}/>\n        <TitleBook>Contacts</TitleBook>\n        <Filter value={filter} onChange={this.findContacts} />\n        <ContactsList contacts={visibleContacts} onDeleteContact={this.deleteContact}/>\n      </Container>\n    )\n  }\n}\n\nexport default App\n\n// {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n//     {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n//     {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n//     {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.jsx';\nimport './utils/nanoid.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}